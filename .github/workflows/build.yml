name: "Build and populate cache"
on:
  pull_request:
  push:
    branches:
      - main
      - master
  schedule:
    # rebuild everyday at 2:51
    # TIP: Choose a random time here so not all repositories are build at once:
    # https://www.random.org/clock-times/?num=1&earliest=01%3A00&latest=08%3A00&interval=5&format=html&rnd=new
    - cron:  '51 2 * * *'
  workflow_dispatch:
jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      # Set this to notify the global nur package registry that changes are
      # available.
      #
      # The repo name as used in
      # https://github.com/nix-community/NUR/blob/master/repos.json
      NUR_REPO: yus314
      # Set this to cache your build results in cachix for faster builds
      # in CI and for everyone who uses your cache.
      #
      # Format: Your cachix cache host name without the ".cachix.org" suffix.
      # Example: mycache (for mycache.cachix.org)
      #
      # For this to work, you also need to set the CACHIX_SIGNING_KEY or
      # CACHIX_AUTH_TOKEN secret in your repository secrets settings in
      # Github found at
      # https://github.com/<your_githubname>/nur-packages/settings/secrets
      CACHIX_NAME: <YOUR_CACHIX_NAME>
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install nix
      uses: cachix/install-nix-action@v30
      with:
        extra_nix_config: |
          experimental-features = nix-command flakes
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - name: Show nixpkgs version
      run: nix eval --impure --expr 'builtins.getFlake (toString ./.).inputs.nixpkgs.shortRev'
    - name: Setup cachix
      uses: cachix/cachix-action@v15
      # Don't replace <YOUR_CACHIX_NAME> here!
      if: ${{ env.CACHIX_NAME != '<YOUR_CACHIX_NAME>' }}
      with:
        name: ${{ env.CACHIX_NAME }}
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Check evaluation
      run: |
        nix-env -f . -qa \* --meta --xml \
          --allowed-uris https://static.rust-lang.org \
          --option restrict-eval true \
          --option allow-import-from-derivation true \
          --drv-path --show-trace \
          -I nixpkgs=https://github.com/NixOS/nixpkgs/archive/$(nix run nixpkgs#jq -- -r '.nodes.nixpkgs.locked.rev' flake.lock).tar.gz \
          -I $PWD
    - name: Build nix packages
      run: |
        nix build --impure --expr '
          let 
            flake = builtins.getFlake (toString ./.);
            pkgs = flake.inputs.nixpkgs.legacyPackages.${builtins.currentSystem};
            ci = import ./ci.nix { inherit pkgs; };
          in ci.cacheOutputs
        '
    # - name: Trigger NUR update
    #   run: curl -XPOST "https://nur-update.nix-community.org/update?repo=${{ env.NUR_REPO }}"
